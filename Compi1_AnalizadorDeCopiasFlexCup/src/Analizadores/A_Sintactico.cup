/****************************************  1ra Area: Codigo de Usuario *******************************************/
//-------> importaciones, paquetes
package Analizadores;
import java_cup.runtime.Symbol;

/**********************************  Codigo para el parser, variables, metodos **********************************/

parser code
{:
    public String resultado="";

    //Metodo al que se llama automaticamente ante algun error sintactico
    public void syntax_error(Symbol s)
    {        
        String lexema = s.value.toString();
        int fila = s.right;
        int columna = s.left;
        
        System.out.println("!!!!!!! Error Sintactico Recuperado !!!!!!!");
        System.out.println("\t\tLexema: "+lexema);
        System.out.println("\t\tFila: "+fila);
        System.out.println("\t\tColumna: "+columna);
    }

    //Metodo al que se llama en el momento en que ya no es posible una recuperacion de errores
    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception
    {        
        String lexema = s.value.toString();
        int fila = s.right;
        int columna = s.left;
        
        System.out.println("!!!!!!! Error Sintactico, Panic Mode !!!!!!! ");
        System.out.println("\t\tLexema: "+lexema);
        System.out.println("\t\tFila: "+fila);
        System.out.println("\t\tColumna: "+columna);
    }
:}

/************************************* Codigo para las acciones gramaticales *********************************/
action code
{::}

/*************************************  2da Area: Declaraciones **************************************/
//------> declaracion de terminales 
terminal iimport, claass, voiid,
         iint, bool, string, chaar, doublee, object,
         iff, elsee, foor, whilee, doo, swiitch,
         priivate, puublic, prootected, fiinal, staatic,
         asterisco, pto, ptoYcoma,coma, llavea, llavec, para, parc,
         mayor, menor, asignacion, mayorQ, menorQ, distinto, iguala,
         mas, menos, por, div,
         num, id,decimal;

//------> declaracion de no terminales
non terminal  INICIO,E,
              PRINCIPALES, IMPORT, IMPORTS1,
              CLASS, CUERPO_CLASE, DECLARACIONES_CLASE, VISIBILIDAD, METODOS, PARAMETROS, TIPODATOS, FUNCIONES, MET_FUNC;

//----> precedencia de menor a mayor 
precedence left mas, menos;
precedence left por, div;

start with INICIO;

/*************************************  23a area: Reglas Semanticas **************************************/

INICIO::=PRINCIPALES:a {: :};

PRINCIPALES::=  PRINCIPALES IMPORT
               |PRINCIPALES CLASS
               |IMPORT
               |CLASS
;

CLASS::= VISIBILIDAD claass id CUERPO_CLASE id 
         |claass id CUERPO_CLASE id 
;

CUERPO_CLASE::= llavea DECLARACIONES_CLASE llavec
               |llavea llavec
;

DECLARACIONES_CLASE::= DECLARACIONES_CLASE VISIBILIDAD MET_FUNC
                      |DECLARACIONES_CLASE MET_FUNC
                      |VISIBILIDAD MET_FUNC
                      |MET_FUNC          
;

MET_FUNC::= voiid id para parc llavea llavec
           |voiid id para PARAMETROS parc llavea llavec
           |TIPODATOS id para parc llavea llavec
           |TIPODATOS id para PARAMETROS parc llavea llavec
;

PARAMETROS::= PARAMETROS coma TIPODATOS id
             |TIPODATOS id
;

IMPORT::= iimport IMPORTS1 ptoYcoma
;

IMPORTS1::= IMPORTS1 pto id
           |IMPORTS1 pto por
           |id
;

VISIBILIDAD::= priivate
              |puublic
              |prootected
              |fiinal
              |staatic
;

TIPODATOS::= iint
            |bool
            |string 
            |chaar 
            |doublee 
            |object
;
